{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "eventGridTopicName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Event Grid custom topic."
      }
    },
    "eventGridSubscriptionName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Event Grid custom topic's subscription."
      }
    },
    "eventGridSubscriptionUrl": {
      "type": "string",
      "metadata": {
        "description": "The webhook URL to send the subscription events to. This URL must be valid and must be prepared to accept the Event Grid webhook URL challenge request. (RequestBin URLs are exempt from this requirement.)"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location in which the Event Grid resources should be deployed."
      }
    }
  },
  "variables": {
    "functionsName-v": "[concat('microservices-datafunctions','-',parameters('environment'))]",
    "functionStorageName-v": "[concat('datafunctionstorage',parameters('environment'))]",
    "functionsPlanName-v": "FunctionsPlan",
    "storageAccountid": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', variables('functionStorageName-v'))]"

  },
  "resources": [
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2015-04-01",
      "name": "[variables('functionsPlanName-v')]",
      "location": "[parameters('location')]",
      "properties": {
        "name": "[variables('functionsPlanName-v')]",
        "computeMode": "Dynamic",
        "sku": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('functionStorageName-v')]",
      "apiVersion": "2016-12-01",
      "location": "[parameters('location')]",
      "kind": "Storage",
      "sku": {
        "name": "Standard_LRS"
      }
    },
    {
      "apiVersion": "2015-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('functionsName-v')]",
      "location": "[parameters('location')]",
      "kind": "functionapp",
      "identity": {
        "type": "SystemAssigned"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('functionsPlanName-v'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('functionStorageName-v'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('functionsPlanName-v'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "StorageQueueConnectionString",
              "value": "[concat('@Microsoft.KeyVault(SecretUri=', reference(variables('queueStorageConnectionStringSecretNameResourceId-v')).secretUriWithVersion, ')')]"
            },
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('functionStorageName-v'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('functionStorageName-v'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('functionStorageName-v'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('functionsName-v'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~2"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "dotnet"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "8.11.1"
            }
          ]
        }
      }
    },
    {
      "name": "[parameters('eventGridTopicName')]",
      "type": "Microsoft.EventGrid/topics",
      "location": "[parameters('location')]",
      "apiVersion": "2018-01-01"
    }
    //,{
    //    "name": "[concat(parameters('eventGridTopicName'), '/Microsoft.EventGrid/', parameters('eventGridSubscriptionName'))]",
    //    "type": "Microsoft.EventGrid/topics/providers/eventSubscriptions",
    //    "location": "[parameters('location')]",
    //    "apiVersion": "2018-01-01",
    //    "properties": {
    //        "destination": {
    //            "endpointType": "WebHook",
    //            "properties": {
    //                "endpointUrl": "[parameters('eventGridSubscriptionUrl')]"
    //            }
    //        },
    //        "filter": {
    //            "includedEventTypes": [
    //                "All"
    //            ]
    //        }
    //    },
    //    "dependsOn": [
    //        "[parameters('eventGridTopicName')]"
    //    ]
    //}
  ]
}
